unit UConsultar.Vendas;

interface

uses
  System.SysUtils, System.Classes, Vcl.Controls, Vcl.Forms, Vcl.Grids,
  Vcl.DBGrids,
  Vcl.StdCtrls, Data.DB, FireDAC.Comp.Client, UPedidos.Modell;

type
  TF_CONSULTAR_VENDAS = class(TForm)
    procedure BConsultarClick(Sender: TObject);
    procedure BFecharClick(Sender: TObject);
  private
    procedure ConsultarVendas;
  public
    { Public declarations }
  end;

var
  F_CONSULTAR_VENDAS: TF_CONSULTAR_VENDAS;

implementation

{$R *.dfm}

procedure TF_CONSULTAR_VENDAS.BConsultarClick(Sender: TObject);
begin
  ConsultarVendas;
end;

procedure TF_CONSULTAR_VENDAS.BFecharClick(Sender: TObject);
begin
  Close;
end;

procedure TF_CONSULTAR_VENDAS.ConsultarVendas;
var
  NomeParcial: String;
begin
  with DM_PEDIDOS_VENDAS.FDQConsultaVendas do
  begin
    Close;
    SQL.Clear;

    if ECliente.Text <> '' then
    begin
      NomeParcial := '%' + ECliente.Text + '%';
      SQL.Text :=
        'SELECT P.Numero AS NumeroPedido, P.DataEmissao, P.ValorTotal, ' +
        'C.Nome AS NomeCliente ' + 'FROM Pedido P ' +
        'JOIN Cliente C ON P.CodigoCliente = C.Codigo ' +
        'WHERE C.Nome LIKE :Nome OR C.Codigo = :Codigo';
      ParamByName('Nome').AsString := NomeParcial;
      ParamByName('Codigo').AsInteger := StrToIntDef(ECliente.Text, 0);
    end
    else
    begin
      ShowMessage('Por favor, informe o nome ou código do cliente.');
      Exit;
    end;

    Open;

    if IsEmpty then
      ShowMessage('Nenhuma venda encontrada para o cliente informado.');
  end;
end;

end.
